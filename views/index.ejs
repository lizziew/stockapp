<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css' />
    <script type="text/javascript" src="http://datahub.csail.mit.edu/static/lib/thrift/thrift.js"></script>
	<script type="text/javascript" src="http://datahub.csail.mit.edu/static/lib/datahub/datahub_types.js"></script>
	<script type="text/javascript" src="http://datahub.csail.mit.edu/static/lib/datahub/DataHub.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
	<script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
	<script src="https://code.highcharts.com/stock/highstock.js"></script>
	<script src="https://code.highcharts.com/modules/exporting.js"></script>
  </head>
  <body>
   <h1><%= title %></h1>
   <div class="row"><p><br></p></div>
	 <div class="row">
	  <div class="col-md-3">
	  	<input type="text" class="form-control" id="stock_input" placeholder="Input stock symbol (e.g. APPL)">
	  </div>
	  <div class="col-md-9">
		<button type="button" class="btn btn-success" id="stock_input_button">Add stock</button>
	  </div>
	</div>

	<table class="table table-hover" id="stock_table">
	    <thead>
	      <tr>
	        <th>Stock Symbol</th>
	        <th>Last Bid Price</th>
	      </tr>
	    </thead>
	    <tbody></tbody>
	  </table>

	  <div class="row"><p><br></p></div>

    <div id="container" style="height: 600px; min-width: 310px"></div>
  </body>
</html>
<script type="text/javascript">
	/*transport = new Thrift.Transport("http://datahub.csail.mit.edu/service/json"),
	protocol = new Thrift.Protocol(transport),
	client = new DataHubClient(protocol),
	con_params = new ConnectionParams({'user': 'eweitest', 'password': 'eweitest'}),
	con = client.open_connection(con_params),
	res = client.execute_sql(con, 'select * from eweitest.repo1.temperature'); 

	console.log(res); */
   var seriesOptions = [],
      seriesCounter = 0,
      names = ['MSFT'];

	Highcharts.setOptions({
	  global : {
	      useUTC : false
	  }
	});
   function createChart() {
	    // Create the chart
	   $('#container').highcharts('StockChart', {
	        chart : {
	            events : {
	               load : function () {
	               	var series = this.series; 
	     					setInterval(function () {
								$.ajax({
								  url: "/getData",
								  type: "POST", 
								  data:{"names": JSON.stringify(names)},
								  success: function(response) {
								    for(var i in response) {
								    	var r = response[i]; 
								    	var x = (new Date()).getTime();
								    	var y = r["lastTradePriceOnly"]; 
								    	series[i].addPoint([x,y], true, true);  

								    	var row_id = "#" + r["symbol"];
								    	$(row_id).html("$" + y);
								    }
								  },
								  error: function(xhr) {
										console.log("Uh oh there was an error: " + error);
										console.log(xhr.status);
										console.log(xhr.responseText);
								  }
								});

	                  }, 1000);
	               }
	            }
	        },

	        rangeSelector: {
	            buttons: [{
	                count: 1,
	                type: 'minute',
	                text: '1M'
	            }, {
	                count: 5,
	                type: 'minute',
	                text: '5M'
	            }, {
	                type: 'all',
	                text: 'All'
	            }],
	            inputEnabled: false,
	            selected: 0
	        },

	        title : {
	            text : 'Live Graph'
	        },

	        exporting: {
	            enabled: false
	        },

	        series: seriesOptions
	    });
	}

	function startChart() {
		seriesOptions = []; 
		seriesCounter = 0; 
		$.each(names, function (i, name) {
			console.log(name); 
	      seriesOptions[i] = {
	      	name: name, 
	      	data: (function () {
	                 // generate an array of random data
	                 var data = [],
	                     time = (new Date()).getTime(),
	                     i;

	                 for (i = -19; i <= 0; i += 1) {
	                     data.push({
	                         x: time + i * 1000,
	                         y: 0
	                     });
	                 }
	                 return data;
	             }()) 
	      };

	      seriesCounter += 1;

	      if (seriesCounter === names.length) {
	          createChart();
	      }
	   });
	}

   function createTable() {
		for(var n in names) {
	   	var name = names[n];
	   	$('#stock_table tr:last').after('<tr><td>' + name + '</td><td id="' + name + '">_</td></tr>');
		}
   }

   function updateTable(new_stock_name) {
	   $('#stock_table tr:last').after('<tr><td>' + new_stock_name + '</td><td id="' + new_stock_name + '">_</td></tr>');
	   $('#container').highcharts().destroy(); 
	   startChart(); 
   }

   $("#stock_input_button").click(function(){
   	var new_stock_name = $("#stock_input").val(); 
		$.ajax({
		  url: "/checkStockSymbol",
		  type: "POST", 
		  data:{"name": new_stock_name},
		  success: function(response) {
		    if(response === "valid") {
		    	names.push(new_stock_name); 
		    	updateTable(new_stock_name); 
		    }	
		    else {
		    	alert("Not a valid stock symbol!");
		    }
		  },
		  error: function(xhr) {
				console.log("Uh oh there was an error: " + error);
				console.log(xhr.status);
				console.log(xhr.responseText);
		  }
		});
	});

	createTable(); 
	startChart(); 
</script> 

